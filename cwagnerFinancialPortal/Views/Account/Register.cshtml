@model cwagnerFinancialPortal.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

@using (Html.BeginForm("Register", "Account", !string.IsNullOrWhiteSpace(ViewBag.ReturnUrl) ? new { returnUrl = ViewBag.ReturnUrl } : null, FormMethod.Post, new { @class = "form-horizontal form-material", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h3 class="box-title m-b-20">Create a new account</h3>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-xs-12">
            <input class="form-control" type="text" name="@nameof(Model.FirstName)" required="" placeholder="First Name">
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-12">
            <input class="form-control" type="text" name="@nameof(Model.LastName)" required="" placeholder="Last Name">
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-12">
            <input class="form-control" type="text" name="@nameof(Model.Email)" required="" placeholder="Email" />
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-12">
            <input class="form-control" type="password" name="@nameof(Model.Password)" required="" placeholder="Password" />
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-12">
            <input class="form-control" type="password" name="@nameof(Model.ConfirmPassword)" required="" placeholder="Confirm Password" />
        </div>
    </div>
    <div class="form-group m-b-0">
        <div class="col-ms-12 text-center">
            <button class="btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light" type="submit">Register</button>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
